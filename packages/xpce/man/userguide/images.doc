\section{Using images and cursors}		\label{sec:images}

Many today graphical user interfaces extensively use (iconic) images.
There are many image formats, some for specific machines, some with
specific goals in mind, such as optimal compression at the loss of
accuracy or provide alternatives for different screen properties.

One of XPCE's aim is to provide portability between the supported
platform. Therefore, we have chosen to support a few formats across all
platforms, in addition to the most popular formats for each individual
platform.


\subsection{Supported Image Formats}

The table below illustrates the image format capabilities of each of the
platforms. Shape support means that the format can indicate {\em
transparent} areas. If such an image file is loaded, the resulting
\class{image} object will have an `image <-mask' associated: a
monochrome image of the same side that indicates where paint is to be
applied. This is required for defining cursors (see `cursor
->initialise') from a single image file. {\em Hotspot} means the format
can specify a location.  If a Hotspot is found, the `image <-hot_spot'
attribute is filled with it.  A Hotspot is necessary for cursors, but
can also be useful for other images.

\begin{center}
\index{XPM,file format}%
\index{ICO,file format}%
\index{CUR,file format}%
\index{XBM,file format}%
\index{JPEG,file format}%
\index{GIF,file format}%
\index{BMP,file format}%
\index{PNM,file format}%
\index{image,file formats}%
\index{image,shape}%
\index{cursor}%
\index{icon}%
\begin{tabular}{lccccccc}
\bf Format & \bf Colour & \bf HotSpot & \bf Shape &
	     \multicolumn{2}{c}{\bf Unix/X11} &
	     \multicolumn{2}{c}{\bf Win32} \\
	   & &&&   load	  & save	      & load & save \\
\hline
\multicolumn{8}{c}{Icons, Cursors and shaped images} \\
\hline
XPM	   & +&+&+&  +	  &  +		      &   +  &  +   \\
ICO	   & +&-&+&  -	  &  -		      &   +  &  -   \\
CUR	   & +&+&+&  -	  &  -		      &   +  &  -   \\
\hline
\multicolumn{8}{c}{Rectangular monochrome images} \\
\hline
XBM	   & -&-&-&  +	  &  +		      &   +  &  -   \\
\hline
\multicolumn{8}{c}{Large rectangular images} \\
\hline
JPEG	   & +&-&-&  -	  &  -		      &   +  &  -   \\
GIF	   & +&-&-&  -	  &  -		      &   +  &  -   \\
BMP	   & +&-&-&  -	  &  -		      &   +  &  -   \\
PNM	   & +&-&-&  +	  &  +		      &   +  &  -   \\
\end{tabular}
\end{center}

The XPM format ({\bf X} {\bf P}ix{\bf M}ap) is the preferred format for
platform-independent storage of images that are used by the application
for cursors, icons and other nice pictures. The XPM format and
supporting libraries are actively developed as a contributed package to
X11.  


\subsubsection{Creating XPM files}

\paragraph{Unix} There are two basic ways to create XPM files. One is to
convert from another format. On Unix, there are two popular conversion
tools. The \program{xv} program is a good interactive tool for format
conversion and applying graphical operations to images.

The \idx{netpbm} package consists of a large collection of converters
from and to the central PNM ({\bf P}ortable a{\bf N}y {\bf M}ap) format.
This packages also contains applications for graphical operations. A
Unix pipeline, consisting of a filter `to' PNM, some graphical operators
and a filter `to' the desired format can be used to convert virtually
any image into another format, while applying operations such as
scaling, rotating, colour dithering, etc. Attributes such as the mask
and hot-spot information are lost in the transformation, and should thus
be added using an XPM-compatible icon editor such as \program{pixmap}.

The \program{pixmap} program is a comprehensive icon editor, supporting
all of XPM's features.  The image tools mentioned here, as well as the
XPM library sources and a FAQ dealing with XPM related issues can be
found at \url{ftp://swi.psy.uva.nl/pub/xpce/util/images/}


\paragraph{Windows}

XPCE supports the Windows native .ICO, .CUR and .BMP formats. Any
editor, such as the resource editors that comes with most C(++)
development environments can be used.  When portability of the
application becomes an issue, simply load the icons into XPCE,
and write them in the XPM format using the `image ->save' method.
See the skeleton below:

\begin{code}
to_xpm(In, Out) :-
	new(I, image(In)),
	send(I, save, Out, xpm),
	free(I).
\end{code}


\subsubsection{Using Images}

Images any of the formats are recognised by many of XPCE's GUI classes.
Here is a brief list:

\begin{center}
\begin{tabular}{|l|p{4in}|}
\hline
\class{bitmap}		& A \class{bitmap} converts an image into a first
			  class \class{graphical} object that can be
			  displayed anywhere. \\
\hline
\class{cursor}		& A \class{cursor} may be created of an image 
			  that has a mask and hot-spot. \\
\hline
`frame ->icon'		& Sets the icon of the frame. The visual result
			  depends on the window system and X11 window
			  manager used.  Using the Windows 95 or NT 4.0
			  shell, the image is displayed in the task-bar
			  and top-left of the window. \\
\hline
`dialog_item ->label'	& The label of all subclasses of class
			  \class{dialog_item} can be an image. \\
\hline
`label ->selection'	& A \class{label} can have an image as its
			  visualisation. \\
\hline
`menu_item ->selection'	& The items of a menu can be an image. \\
`style ->icon'		& Allows association of images to lines in
			  a \class{list_browser}, as well as marking
			  \classs{fragment} in an \class{editor}. \\
\hline
\end{tabular}
\end{center}

