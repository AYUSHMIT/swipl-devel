\documentclass[11pt]{article}
\usepackage{pl}
\usepackage{html}
%\onefile
\sloppy
\makeindex

\onefile
\htmloutput{Windows}				% Output directory
\htmlmainfile{READWIN.html}			% Main document file
\bodycolor{white}				% Page colour

\renewcommand{\runningtitle}{SWI-Prolog for MS-Windows}

\begin{document}

\title{SWI-Prolog for MS-Windows}
\author{Jan Wielemaker \\
	SWI, \\
	University of Amsterdam \\
	The Netherlands \\
	E-mail: \email{jan@swi-prolog.org}}

\maketitle

\begin{abstract}
This document summarises the most important issues to get you started
using SWI-Prolog on MS-Windows.
\end{abstract}


\tableofcontents

\section{Using SWI-Prolog}

\subsection{Starting Prolog and loading a program}

The SWI-Prolog executable \program{plwin.exe} can be started from the
\emph{StartMenu} or by opening a \fileext{pl} file holding Prolog
program text from the Windows explorer.%
	\footnote{The .PL file extension can be changed
		  during installation. See \secref{ext}.}
The installation folder (by default \file{C:\bsl{}Program~Files\bsl{}pl})
contains a subfolder \file{demo} with the file \file{likes.pl}. This
file can be opened in Prolog from the StartMenu, by opening \file{likes.pl}
in the Windows explorer or using the following command in the Prolog
application.  Be sure to get the quotes right and terminate the command
with a full-stop (\chr{.}).

\begin{code}
?- [swi('demo/likes')].
\end{code}

\subsection{Executing a query}			\label{sec:execquery}

After loading a program, one can ask Prolog queries about the program.
The query below asks Prolog what food `sam' likes. The system responds
with \mbox{\tt X = <value>} if it can prove the goal for a certain
\arg{X}. The user can type the semi-colon (;)%
	\footnote{On most installations, single-character commands are
		  executed without waiting for the {\sc return} key.}
if (s)he wants another solution, or {\sc return} if (s)he is satisfied,
after which Prolog will say {\bf Yes}. If Prolog answers {\bf No}, it
indicates it cannot find any (more) answers to the query. Finally,
Prolog can answer using an error message to indicate the query or
program contains an error.

\begin{code}
?- likes(sam, X).

X = dahl ;

X = tandoori ;

...

X = chips ;

No
?-
\end{code}


\subsection{Menu commands}

The SWI-Prolog console provided by \program{plwin.exe} has a menu for
accessing the most commonly used commands.







\subsection{Useful commands}


\begin{description}
    \predicate{consult}{1}{+File}
Load a source-file. On Windows folders may be specified with the 
DOS/Windows \chr{\}, which must be escaped or using the POSIX standard
\chr{/}.  Especially when used in source-code \chr{/} is to be preferred
as it is portable.  A Prolog list ([\ldots]) can be used to abbreviate 
the consult command.  The file-extension (\fileext{pl} as well as the
selected alternative) can be omitted.  Here are some examples:

\begin{center}
\begin{tabular}{ll}
\tt ?- consult(likes). & Load \file{likes.pl} from the current folder
			 (see pwd/0). \\
\tt ?- ['C:/Program Files/pl/demo/likes'] & Load \file{likes.pl} using
			absolute path. \\
\tt ?-
['C:\bsl{}\bsl{}Program~Files\bsl{}\bsl{}pl\bsl{}\bsl{}demo\bsl{}\bsl{}likes']
& Same using Windows-style path-name \\
\end{tabular}
\end{center}

    \predicate{pwd}{0}{}
Print working directory (folder).

    \predicate{ls}{0}{}
List files in current directory.

    \predicate{edit}{0}{}
If Prolog is started by opening a \fileext{pl} file in the explorer,
edit this file.  Also available from the menu.

    \predicate{edit}{1}{+Spec}
Edit file, predicate, module, etc.\ with the given name.  If multiple
items are named \arg{Spec} it prompts for the desired alternative.

    \predicate{make}{0}{}
Reload all files that have been changed since they where last loaded.
Normally used after editing one or more files.
\end{description}


\section{The installation}

\subsection{Choosing the file-extension}		\label{sec:ext}

By default, Prolog uses the \fileext{pl} extension to indicate Prolog
source-files.  Unfortunately this extension conflicts with the Perl
language. If you want to use both on the same Windows machine SWI-Prolog
allows you to choose a different extension during the installation.  The
extension \fileext{pro} is a commonly used alternative.  If portability
is an issue, it is advised to use the alternative extension only for the
\emph{load file}, the source-file that loads the entire program and use
the normal \fileext{pl} extension for libraries and files loaded from
other files.


\subsection{Installed programs}

The following tools and programs are installed:

\begin{center}
\begin{tabular}{|l|p{4in}|}
\hline
\multicolumn{2}{|c|}{Programs} \\
\hline
\verb$bin\plwin.exe$	& Default Windows application for interactive
			  use. \\
\verb$bin\plcon.exe$    & Console-based version for scripting purposes. \\
\hline
\multicolumn{2}{|c|}{Utilities} \\
\hline
\verb$bin\plld.exe$	& Linker front-end to make single-file mixed
			  Prolog/C/C++ executables. \\
\verb$bin\plrc.exe$	& Manipulate Prolog resource files. \\
\hline
\multicolumn{2}{|c|}{Important directories} \\
\hline
\verb$bin$		& Executables and DLL files \\
\verb$library$		& Prolog library \\
\verb$boot$		& Sources for system predicates \\
\verb$include$		& C/C++ header files for embedding or to create
			  extensions \\
\verb$xpce$		& XPCE graphics system \\
\verb$xpce\prolog\lib$	& XPCE/Prolog library \\
\hline
\multicolumn{2}{|c|}{DLLs and other supporting files} \\
\hline
\verb$boot32.prc$       & Prolog resource file containing system predicates \\
\verb$\bin\libpl.dll$	& The Prolog kernel \\
\verb$\bin\plterm.dll$	& The window for \program{plwin.exe} \\
\verb$\bin\pthreadVC.dll$& POSIX thread runtime library \\
\verb$\bin\msvcrt.dll$	& Microsoft C runtime library \\
\hline
\multicolumn{2}{|c|}{Extension DLLs (plugins)} \\
\hline
\verb$\bin\xpce2pl.dll$	& The XPCE graphics system \\
\verb$\bin\socket.dll$	& Prolog socket interface \\
\verb$\bin\time.dll$	& Timing and alarm library \\
\verb$\bin\cgi.dll$	& Gather CGI GET and POST arguments \\
\verb$\bin\odbc4pl.dll$	& ODBC interface \\
\verb$\bin\sgml2pl.dll$	& SGML/XML parser \\
\verb$\bin\table.dll$	& Access structured files as tables \\
\hline
\end{tabular}
\end{center}

\subsection{Installed Registry keys and menus}

The filetype \fileext{pl} or choosen alternative (see \secref{ext}) is
associated to \program{plwin.exe}.  A choosen folder (default SWI-Prolog)
is added to the start-menu holding shortcuts to Prolog and some related
utilities.

The following registry keys are in use:

\begin{center}
\begin{tabular}{|l|p{4in}|}
\hline
\multicolumn{2}{|c|}{\tt HKEY_LOCAL_MACHINE\bsl{}Software\bsl{}SWI\bsl{}Prolog} \\
\hline
\verb$fileExtension$		& Extension used for Prolog files \\
\verb$group$			& Start-menu group \\
\verb$cwd$			& Default folder for shortcut \\
\verb$home$			& Installation directory \\
\hline
\multicolumn{2}{|c|}{\tt HKEY_CURRENT_USER\bsl{}Software\bsl{}SWI\bsl{}Prolog} \\
\hline
\verb$localSize$		& Default local stack size (KB) \\
\verb$globalSize$		& Default global stack size (KB) \\
\verb$trailSize$		& Default trail stack size (KB) \\
\verb$argumentSize$		& Default argument stack size (KB) \\
\hline
\multicolumn{2}{|c|}{\tt HKEY_CURRENT_USER\bsl{}Software\bsl{}SWI\bsl{}Plwin\bsl{}Console} \\
\multicolumn{2}{|c|}{Note: thread-windows store the same info in sub-keys} \\
\hline
\verb$Height$			& Height of window in character units \\
\verb$Width$			& Width of window in character units \\
\verb$X$			& Left-edge of window in pixel units \\
\verb$Y$			& Top-edge of window in pixel units \\
\verb$SaveLines$		& Number of lines available for scrollback \\
\hline
\end{tabular}
\end{center}


\section{The SWI-Prolog community and foundation}


\subsection{Web-site and mailinglists}




\subsection{License conditions}


\end{document}
