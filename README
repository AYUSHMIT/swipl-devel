		    SWI-Prolog Distribution Directory

** Last update: Thu Nov 11 1999 (3.3.0)

AUTHOR
======
	Jan Wielemaker
	SWI
	University of Amsterdam
	Roetersstraat 15
	1018 WB  Amsterdam
	The Netherlands
	E-mail: jan@swi.psy.uva.nl

DIRECTORIES
===========

The SWI-Prolog source tree consists of the following directories:

./src		C sources
./boot		Prolog system predicates defined in Prolog
./library	Prolog user's library
./include	Include files.  Mostly for handling foreign-code
./man		Manual (LaTeX)


BUILDING SWI-Prolog
===================

Unix
----

SWI-Prolog configuration under  Unix  is   driven  by  the  GNU-autoconf
package. Please check INSTALL for the   generic installation options and
INSTALL.notes for some SWI-Prolog specific things.

SWI-Prolog should compile using any Unix-type   system with 32 or larger
(64) word-length and an ANSI-compliant C-compiler.

If SWI-Prolog crashes during the installation,  the most likely cause is
that the detection of mmap()  for   stack-memory  management or handling
exception-based stack guarding is not configured   properly.  If you are
knowledgeable in these issues, check src/test/mmap.c and src/pl-setup.c.
Otherwise, run configure using the options below,   first  to get rid of
exception-handling and second to  fall  back   to  malloc()  based stack
management.

	./configure --diable-segv-handling
	./configure --disable-mapped-stacks

Run `make clean && make' to recompile after reconfiguration.

MS-Windows
----------

Unless there is a special reason, please  use the binary distribution on
MS-Windows.

If you insist using the sources, the windows version is build using MSVC
5.0. If you have this version, load src\pl.dsw and recompile those parts
of the system you  need.  The  executables   are  created  in  the `bin'
directory, the import-libraries in the `lib'  directory. They can be run
from  this  location.  It  is  adviced  to   copy  them  into  a  binary
distribution to arrive at a properly configured system.


GNU-EMACS INTERFACE
===================

The Prolog-mode of GNU-Emacs is  rather  poor.   Once  there  was a much
better mode developed for  Quintus  which   was  addapted  for  use with
SWI-Prolog by me. Unfortunately  this  died   in  Emacs-19.  If you have
pointers to a properly  working  and   usable  Prolog  interface, please
inform us.


MODIFYING SWI-Prolog
====================

You are free to modify SWI-Prolog under   the  GPL-2. As we also provide
licenses for use with proprietary software,   your  changes will only be
integrated into the base system if you grant us the copyright.


PROLOG PROGRAMS
===============

Additions to the library and other stand alone Prolog programs have less
strick conditions.  Add comments such that   other  users can understand
the program or library module and   ensure  the files provide sufficient
documentation on its origin, waranty  and distribution conditions.  Such
contributions are copied verbatim and not maintained by me.
