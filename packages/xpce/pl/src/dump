#!/bin/csh -f
# Create xpce executable

if ( $#argv != 2 ) then
  echo "Usage: dump emulator state"
  exit 1
endif

set emulator = $1
set xpce     = $2

$emulator -f none << _EOS_
retractall(library_directory('/usr/local/lib/pl/library')).

['../../prolog/boot/pce_expand'].
use_module('../../prolog/boot/pce_pl').
absolute_file_name('../../prolog/lib', Dir),
assert(library_directory(Dir), Ref),
use_module('../../prolog/lib/pce'),
erase(Ref).

feature(version, PlVersion),
send(@pce, catch_error_signals, @on),
concat('SWI-Prolog version ', PlVersion, PlId),
send(@prolog, system, PlId).
   
(   getenv('PCEHOME', Home)
->  true
;   absolute_file_name('../..', Home)
),
format('PCE home directory = ~w~n', Home),
send(@pce, home, Home).


assert((library_directory(PceLib) :-
	get(@pce, home, Home),
	concat(Home, '/prolog/lib', RawLib),
	absolute_file_name(RawLib, PceLib))).

assert((file_search_path(demo, DemoDir) :-
	get(@pce, home, Home),
	concat(Home, '/prolog/demo', Raw),
	absolute_file_name(Raw, DemoDir))).

assert((file_search_path(contrib, ContribDir) :-
	get(@pce, home, Home),
	concat(Home, '/prolog/contrib', Raw),
	absolute_file_name(Raw, ContribDir))).

use_module(library(pce_manual)).


		/********************************
		*        LOCK LOADED FILES	*
		********************************/

'\$make_system_source_files'.
'\$autoload':clear_library_index.

save_program('$xpce',
	[ goal		= 'pce_host:pce_banner'
	]).

get(@pce, home, Home),
concat(Home, '/prolog/lib', PceLib),
make_library_index(PceLib).


halt.
_EOS_
