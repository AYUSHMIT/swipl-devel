				XPCE ToDo List

*) Merge device <->bad_bouding_box and <->bad_format into request_compute 
   member.

[ Bugs ]

*) OpenWindows: completer() window properties!

[ Introduction of 16-bit text issues ]

*) Store/load 16-bit and encoding info for string, char_array and text_buffer

*) Names: make them unique over encodings

Issue list:

*) Character encoding and 16-bit fonts:

   + Case detection and conversion: what does it mean?
   + Numbers?
   + Newline, tab

*) Communication with the outside world.

*) Regex and 16-bit units?

*) text_buffer->sort for 16-bit version


[This list is just for minor problems.  More fundamental issues are
 in my head :-]

*) Add class <->recogniser.

*) > A simple "problem".  When I define an editor as not editable I cannot use
   > the newline etc. behaviours - only append.  By the definition of the editable
   > behaviour, all programmatic alterations should be allowable.  Am I wrong
   > somewhere (XPCE is the same as ProWindows in this respect!).

   I see.  Actually it might not be as simple as you think it is.  In the
   old days editors had `interactive' and `non-interactive' methods, but a
   redesign of the key-mapping stuff made this distinction unnecessary.  
   Application programmers can now easily add new methods, complicatings
   things further.  I see two ways out: <-editable checks whether the
   modifying command is executed from the ->event function.  This may
   be dubious.  Or, <-editable works *always*, regardless of the source
   of the modification and so you should switch it if you want to modify.
   I'll put it on the `todo' list ...


*) Browser: too long items may be selected when the pointer is
   below all items.  Scrollbar is strange then.

*) Editor
	1) Allow for editing fragments?  How difficult is this?
	2) Flag to stop it moving the caret on scrolling.
	3) Selection handling conform OpenLook (switchable).

*) Bitmaps:
	2) Stencils

*) Window ->grab_keyboard werkt niet zonder Window ->grab_pointer!

*) Efficient constraint handling for spatials
	1) Trap updates for spatials at class graphical?

*) Communicate with host on CWD (current directory)

*) Improve consistency of functional group identifiers.

*) Print \t as space for xwn-draw.c text functions

*) Modify node->displayed to work as one should expect?
