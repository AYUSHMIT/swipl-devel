! XPCE 4.8 Resource definitions for colour and monochrome displays
! Author: Jan Wielemaker, University of Amsterdam
! Last Modified: Tue Jun 13 21:58:19 1995

! See README.customise before changing this file.

! This resource should define an XPCE executable object.  It is ran when
! the display is first opened.  We use it to define various global objects
! used in the resources below.

Pce.Display.initialise: \
	and(_dialog_bg        @= when(@colour_display, grey80, white), \
	    _button_elevation @= elevation(button, 1, @default, \
					   grey95, grey30, \
					   '3d', grey70), \
	    _mark_elevation   @= elevation(mark, 0), \
	    _win_pen	      @= when(@colour_display, 0, 1))

! Path for finding standard bitmaps

Pce.Image.path:	\
	".:bitmaps:~/lib/bitmaps:$PCEHOME/bitmaps:/usr/include/X11/bitmaps"

! Binding for the logical font-names.  You can bind any name to any
! font here.

Pce.Display.system_fonts:	[ normal    := font(helvetica, roman, 12), \
				  bold      := font(helvetica, bold, 12), \
				  italic    := font(helvetica, oblique, 12), \
				  small     := font(helvetica, roman, 10), \
				  large     := font(helvetica, roman, 14), \
				  boldlarge := font(helvetica, bold, 14), \
				  huge      := font(helvetica, roman, 18), \
				  boldhuge  := font(helvetica, bold, 18), \
				  fixed     := font(screen, roman, 13) \
				]

! This one is often slow on colour displays.  Prefer the beep then.
Pce.*.visual_bell:		when(@colour_display, @off, @on)

! Dialog Item definitions.

Pce.DialogItem.label_font:	bold
Pce.DialogItem.look:		open_look
Pce.DialogItem.elevation:	when(@colour_display, 1, 0)
Pce.DialogItem.background:	@_dialog_bg
Pce.*.inactive_colour: 		when(@colour_display, \
				     colour(grey60), \
				     @grey50_image)
Pce.DialogItem.label_format:	right
Pce.LabelBox.label_format:	right

Pce.MenuBar.label_font:		normal
Pce.MenuBar.format:		left
Pce.MenuBar.gap:		10

Pce.Button.radius:		when(@colour_display, 8, 12)
Pce.Button.size:		size(50,20)
Pce.Button.label_font:		normal
Pce.Button.alignment:		center
Pce.Button.elevation:		when(@colour_display, button, @nil)
Pce.Button.shadow:		when(@colour_display, 0, 1)
Pce.Button.popup_image:		when(@colour_display, @nil, @ol_pulldown_image)

Pce.Slider.look:		when(@colour_display, motif, open_look)

Pce.Menu.value_font:		normal
Pce.Menu.pen:			when(@colour_display, 0, 1)
Pce.Menu.border:		2
Pce.Menu.elevation:		when(@colour_display, 0, @nil)
Pce.Menu.item_elevation:	when(@colour_display, button, @nil)
Pce.Menu.mark_elevation:	when(@colour_display, mark, @nil)
Pce.Menu.cycle_indicator:	when(@colour_display, \
				     elevation(1), @ol_cycle_image)

Pce.Popup.look:			when(@colour_display, motif, open_look)
Pce.Popup.format:		left
Pce.Popup.value_font:		normal
Pce.Popup.pen:			0
Pce.Popup.margin:		1
Pce.Popup.elevation:		when(@colour_display, 1, @nil)
Pce.Popup.item_elevation:	when(@colour_display, 0, @nil)
Pce.Popup.preview_elevation:	1
Pce.Popup.border:		4
Pce.Popup.preview_feedback:	rounded_box
Pce.Popup.popup_image:		when(@colour_display, @nil, @ol_pullright_image)
Pce.Popup.accelerator_font:	@nil

Pce.DialogGroup.radius:		when(@colour_display, 8, 12)

Pce.ScrollBar.look:		open_look
Pce.ScrollBar.distance:		0
Pce.ScrollBar.elevation:	when(@colour_display, 1, @nil)
Pce.ScrollBar.background:	@_dialog_bg
Pce.ScrollBar.pen:		@_win_pen
Pce.ScrollBar.placement:	[right,bottom]
!Pce.ScrollBar.repeat_interval:	0.03

!Use the following resources if you prefer the X11 (xterm) scrollbars
!Pce.ScrollBar.look:		x
!Pce.ScrollBar.distance:	- @_win_pen
!Pce.ScrollBar.elevation:	when(@colour_display, \
!				     1, \
!				     elevation(@nil, 1, @grey50_image))


Pce.TextItem.elevation:			when(@colour_display, 1, @nil)
Pce.TextItem.look:			open_look
Pce.TextItem.border:			2

Pce.Label.font:				normal
Pce.Label.elevation:			@nil
Pce.Label.border:			1

Pce.Dialog.background:			@_dialog_bg
Pce.Browser.background:			@_dialog_bg
Pce.Browser.pen:			0
Pce.View.background:			@_dialog_bg
Pce.Window.pen:				@_win_pen
Pce.Window.background:			white
Pce.Frame.background:			@_dialog_bg
Pce.WindowDecorator.background:		@_dialog_bg

Pce.Graphical.selected_foreground:	white
Pce.Graphical.selected_background:	black
Pce.Window.selection_feedback:		when(@colour_display, \
					     colour, \
					     invert)


Pce.TextImage.background:		@default
Pce.TextImage.colour:			black
Pce.TextImage.elevation:		when(@colour_display, 1, @nil)
Pce.TextCursor.inactive_colour: 	black
Pce.TextCursor.colour:			when(@colour_display, red, black)
Pce.TextCursor.fixed_font_style:	open_look
Pce.TextCursor.proportional_font_style:	open_look
Pce.Editor.selection_style:		when(@colour_display, \
					     style(background := yellow), \
					     style(highlight := @on))
Pce.ListBrowser.font:			normal
Pce.ListBrowser.pen:                    when(@colour_display, 0, 1)
Pce.ListBrowser.selection_style:	when(@colour_display, \
					     style(background := black, \
						   colour := white), \
					     style(highlight  := @on))
Pce.*.isearch_style:			when(@colour_display, \
					     style(background := green), \
					     style(background:= @grey25_image))

! Finally, parse the user's defaults file.

#include ~/.Xpce
