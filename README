		    SWI-Prolog Distribution Directory

** Last update: Fri Dec 18 13:57:18 1992 (1.6.7)
		Mon Jun 28 14:42:06 1993 (1.7.0)
		Mon Nov 22 15:23:54 1993 (1.8.5)
		Thu Nov 10 10:03:46 1994 (1.9.4)

AUTHOR
======
	Jan Wielemaker
	SWI
	University of Amsterdam
	Roetersstraat 15
	1018 WB  Amsterdam
	The Netherlands
	E-mail: jan@swi.psy.uva.nl

DIRECTORIES
===========

The SWI-Prolog source tree consists of the following directories:

./src		C sources
./boot		Prolog system predicates defined in Prolog
./library	Prolog user's library
./include	Include files.  Mostly for handling foreign-code
./man		Manual (LaTeX)
./lisp		GNU-Emacs Lisp sources for a better Prolog-mode
		(See swi-prolog19.el for using Emacs-19)


BUILDING SWI-Prolog
===================

As from version 1.9.2, SWI-Prolog is configured using GNU autoconf.  The
file  INSTALL  gives  the  generic    autoconf  installation  procedure.
INSTALL.notes contains some SWI-Prolog specific hints.  Read this before
running ./configure.  Finally, INSTALL.problems contains  some hints for
if things go wrong.

If SWI-Prolog does not automatically configure, you may wish to download
swi.psy.uva.nl/pub/SWI-Prolog/old-md-files.tgz  to  check    the  manual
configuration.


GNU-EMACS INTERFACE
===================

In the directory ./lisp, you'll  find   an  interface to GNU-EMACS.  The
file README.SWI provides installation directives.    In  consists of the
Quintus Prolog gnu-emacs interface with an additional file swi-prolog.el
that redefines and adds some things.   See also the swi-prolog19.el file
for using Emacs-19.


MODIFYING SWI-Prolog
====================

You are free to modify SWI-Prolog under   the licence terms specified in
the file LICENCE.   You  may  wish  the   other  users  can  share  your
improvements.   For  code  to  be  accepted  as  part  of  the  official
distribution, it should be written in the same  style as the rest of the
SWI-Prolog sources.  I do not claim this style to be the best available,
but I want the  entire  source  to   have  a  consistent  style.  Please
document the modifications and  if   reasonably  possible  indicate them
using #if ...  #endif.   Please  do  not   send  `diff'  files  to me, I
probably do not have the same version of the sources, so complete files,
with  the  changes  indicated  with  #if   ...   #endif  are  easier  to
incorporate.

If your change is accepted, you will  be propriately acknowledged in the
distribution.

PROLOG PROGRAMS

Additions to the library and other stand alone Prolog programs have less
strick conditions.  Add comments such that   other  users can understand
the program or library module and   ensure  the files provide sufficient
documentation on its origin, waranty  and distribution conditions.  Such
contributions are copied verbatim and not maintained by me.
