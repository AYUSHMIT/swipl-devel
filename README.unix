Summary of reported installation problems on various Unix brands:

sparc-sunos5.x
==============
    save/1 is not detected to work.  The problem is reported to be
    related to the readline library.  Unclear and not settled.

i386-linux
==========
    load_foreign/2 works, but loading things with (big) libraries often
    gives problems.  I'm desperately waiting for ELF to become available
    at some scale.  For now, use the static linking schema described in
    the manual.

sgi-irix5.3
===========
    When configured with --enable-dlopen, HAVE_DLOPEN in config.h is
    left undefined, while configure claims to find dlopen().  Just
    change the line to #define HAVE_DLOPEN 1 and all works fine.
    Probably caused by a bug in autoconf or a bug in the sh shell.

    Requires pl-2.0.9 or later or the patch below applied:

===================================================================
RCS file: /staff/jan/CVS/pl/src/pl-incl.h,v
retrieving revision 1.42
diff -c -r1.42 pl-incl.h
*** 1.42        1995/04/21 09:08:20
--- pl-incl.h   1995/04/26 10:10:58
***************
*** 857,863 ****
  #    ifdef DATA_AT_0X2
  #      define PTR_TO_NUM_OFFSET         0x20000000L
  #    else
! #      ifdef DATA_AT_OX1
  #        define PTR_TO_NUM_OFFSET 0x10000000L
  #      else
  #        define PTR_TO_NUM_OFFSET 0x0L
--- 857,863 ----
  #    ifdef DATA_AT_0X2
  #      define PTR_TO_NUM_OFFSET         0x20000000L
  #    else
! #      ifdef DATA_AT_0X1
  #        define PTR_TO_NUM_OFFSET 0x10000000L
  #      else
  #        define PTR_TO_NUM_OFFSET 0x0L

hppa1.1-hpux9.01 (uname -a --> HP-UX jupiter A.09.01 E 9000/720)
================================================================
  * Configure gets MMAP_MAX_ADDRESS wrong.  Problem diagnoses as
    `illegal clause' during the boot compilation.  Make sure
    the following definition appears in config.h or get pl-2.0.9

    #define MMAP_MAX_ADDRESS 0x50000000L

  * HPUX make is broken for creation of the runtime system.  Use
    GNU-make or create the ../runtime/<architecture> directory by
    hand.

  * Added shared library interface, but it is not complete.  It appears
    you need to export the symbols from the main executable, but I don't
    know how (or maybe this is a gcc 2.5.8 problem as this version
    doesn't support shared libraries).  A HPUX guru?

  * Got the following from Sam Nelson, Comp Sci, Stirling U, FK9 4LA, Scotland

    I spent a while playing with versions of GCC and pl-2.0.6 yesterday.
    I'm offering HP CPU time to a group at Glasgow at present who are
    building an HP version of the Haskell FP language, and they're
    _very_ picky about exactly what version of GCC is in use.  It
    appears that, while pl-2.0.6 builds successfully with GCC-2.5.8, the
    `out-of-the-box' versions of both GCC-2.6.0 and 2.6.3 cause problems
    (extremely subtle-looking warnings are generated by the assembler in
    several places).  However, `fixed' versions of GCC are generated by
    a group at the university of Utah (which is where the Haskell group
    likes its HP GCC versions to come from) and the latest version,
    2.6.3u9, from `jaguar.cs.utah.edu:dist/hpuxbin.tar.Z' builds
    pl-2.0.6 successfully.

    Just thought you might like to know.  If there are any other
    HP-oriented experiments you'd like me to try out, please let me
    know.  I think the Prolog staff users around here are as relieved as
    I am at the prospect of being able to throw away C-Prolog after all
    these years...!

