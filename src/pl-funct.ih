#define FUNCTOR_abs1         MK_FUNCTOR(0, 1)
#define FUNCTOR_acos1        MK_FUNCTOR(1, 1)
#define FUNCTOR_alt0         MK_FUNCTOR(2, 0)
#define FUNCTOR_and2         MK_FUNCTOR(3, 2)
#define FUNCTOR_apply2       MK_FUNCTOR(4, 2)
#define FUNCTOR_ar_equals2   MK_FUNCTOR(5, 2)
#define FUNCTOR_ar_not_equal2 MK_FUNCTOR(6, 2)
#define FUNCTOR_asin1        MK_FUNCTOR(7, 1)
#define FUNCTOR_atan1        MK_FUNCTOR(8, 1)
#define FUNCTOR_atan2        MK_FUNCTOR(9, 2)
#define FUNCTOR_backslash1   MK_FUNCTOR(10, 1)
#define FUNCTOR_bar2         MK_FUNCTOR(11, 2)
#define FUNCTOR_block3       MK_FUNCTOR(12, 3)
#define FUNCTOR_brace_term_position3 MK_FUNCTOR(13, 3)
#define FUNCTOR_break1       MK_FUNCTOR(14, 1)
#define FUNCTOR_break3       MK_FUNCTOR(15, 3)
#define FUNCTOR_call1        MK_FUNCTOR(16, 1)
#define FUNCTOR_catch3       MK_FUNCTOR(17, 3)
#define FUNCTOR_ceil1        MK_FUNCTOR(18, 1)
#define FUNCTOR_ceiling1     MK_FUNCTOR(19, 1)
#define FUNCTOR_comma2       MK_FUNCTOR(20, 2)
#define FUNCTOR_context2     MK_FUNCTOR(21, 2)
#define FUNCTOR_cos1         MK_FUNCTOR(22, 1)
#define FUNCTOR_cputime0     MK_FUNCTOR(23, 0)
#define FUNCTOR_curl1        MK_FUNCTOR(24, 1)
#define FUNCTOR_cut_call1    MK_FUNCTOR(25, 1)
#define FUNCTOR_cut_exit1    MK_FUNCTOR(26, 1)
#define FUNCTOR_dcut1        MK_FUNCTOR(27, 1)
#define FUNCTOR_debugging1   MK_FUNCTOR(28, 1)
#define FUNCTOR_dexit2       MK_FUNCTOR(29, 2)
#define FUNCTOR_dforeign_registered2 MK_FUNCTOR(30, 2)
#define FUNCTOR_dgarbage_collect1 MK_FUNCTOR(31, 1)
#define FUNCTOR_div2         MK_FUNCTOR(32, 2)
#define FUNCTOR_divide2      MK_FUNCTOR(33, 2)
#define FUNCTOR_domain_error2 MK_FUNCTOR(34, 2)
#define FUNCTOR_dot2         MK_FUNCTOR(35, 2)
#define FUNCTOR_doublestar2  MK_FUNCTOR(36, 2)
#define FUNCTOR_dthrow1      MK_FUNCTOR(37, 1)
#define FUNCTOR_e0           MK_FUNCTOR(38, 0)
#define FUNCTOR_equals2      MK_FUNCTOR(39, 2)
#define FUNCTOR_erased1      MK_FUNCTOR(40, 1)
#define FUNCTOR_error2       MK_FUNCTOR(41, 2)
#define FUNCTOR_evaluation_error1 MK_FUNCTOR(42, 1)
#define FUNCTOR_exception3   MK_FUNCTOR(43, 3)
#define FUNCTOR_existence_error2 MK_FUNCTOR(44, 2)
#define FUNCTOR_exp1         MK_FUNCTOR(45, 1)
#define FUNCTOR_fail0        MK_FUNCTOR(46, 0)
#define FUNCTOR_failure_error1 MK_FUNCTOR(47, 1)
#define FUNCTOR_float1       MK_FUNCTOR(48, 1)
#define FUNCTOR_float_fractional_part1 MK_FUNCTOR(49, 1)
#define FUNCTOR_float_integer_part1 MK_FUNCTOR(50, 1)
#define FUNCTOR_floor1       MK_FUNCTOR(51, 1)
#define FUNCTOR_frame_finished1 MK_FUNCTOR(52, 1)
#define FUNCTOR_hat2         MK_FUNCTOR(53, 2)
#define FUNCTOR_ifthen2      MK_FUNCTOR(54, 2)
#define FUNCTOR_integer1     MK_FUNCTOR(55, 1)
#define FUNCTOR_is2          MK_FUNCTOR(56, 2)
#define FUNCTOR_larger2      MK_FUNCTOR(57, 2)
#define FUNCTOR_larger_equal2 MK_FUNCTOR(58, 2)
#define FUNCTOR_list_position4 MK_FUNCTOR(59, 4)
#define FUNCTOR_listing1     MK_FUNCTOR(60, 1)
#define FUNCTOR_log1         MK_FUNCTOR(61, 1)
#define FUNCTOR_log101       MK_FUNCTOR(62, 1)
#define FUNCTOR_lshift2      MK_FUNCTOR(63, 2)
#define FUNCTOR_max2         MK_FUNCTOR(64, 2)
#define FUNCTOR_min2         MK_FUNCTOR(65, 2)
#define FUNCTOR_minus1       MK_FUNCTOR(66, 1)
#define FUNCTOR_minus2       MK_FUNCTOR(67, 2)
#define FUNCTOR_mod2         MK_FUNCTOR(68, 2)
#define FUNCTOR_module2      MK_FUNCTOR(69, 2)
#define FUNCTOR_not_provable1 MK_FUNCTOR(70, 1)
#define FUNCTOR_obtain2      MK_FUNCTOR(71, 2)
#define FUNCTOR_or2          MK_FUNCTOR(72, 2)
#define FUNCTOR_permission_error3 MK_FUNCTOR(73, 3)
#define FUNCTOR_pi0          MK_FUNCTOR(74, 0)
#define FUNCTOR_pipe1        MK_FUNCTOR(75, 1)
#define FUNCTOR_plus2        MK_FUNCTOR(76, 2)
#define FUNCTOR_portray1     MK_FUNCTOR(77, 1)
#define FUNCTOR_print1       MK_FUNCTOR(78, 1)
#define FUNCTOR_print_message2 MK_FUNCTOR(79, 2)
#define FUNCTOR_procedure2   MK_FUNCTOR(80, 2)
#define FUNCTOR_prove1       MK_FUNCTOR(81, 1)
#define FUNCTOR_prove2       MK_FUNCTOR(82, 2)
#define FUNCTOR_random1      MK_FUNCTOR(83, 1)
#define FUNCTOR_rem2         MK_FUNCTOR(84, 2)
#define FUNCTOR_representation_error1 MK_FUNCTOR(85, 1)
#define FUNCTOR_retry1       MK_FUNCTOR(86, 1)
#define FUNCTOR_round1       MK_FUNCTOR(87, 1)
#define FUNCTOR_rshift2      MK_FUNCTOR(88, 2)
#define FUNCTOR_semicolon2   MK_FUNCTOR(89, 2)
#define FUNCTOR_sign1        MK_FUNCTOR(90, 1)
#define FUNCTOR_sin1         MK_FUNCTOR(91, 1)
#define FUNCTOR_singleton3   MK_FUNCTOR(92, 3)
#define FUNCTOR_smaller2     MK_FUNCTOR(93, 2)
#define FUNCTOR_smaller_equal2 MK_FUNCTOR(94, 2)
#define FUNCTOR_softcut2     MK_FUNCTOR(95, 2)
#define FUNCTOR_spy1         MK_FUNCTOR(96, 1)
#define FUNCTOR_sqrt1        MK_FUNCTOR(97, 1)
#define FUNCTOR_star2        MK_FUNCTOR(98, 2)
#define FUNCTOR_stream_position3 MK_FUNCTOR(99, 3)
#define FUNCTOR_string_position2 MK_FUNCTOR(100, 2)
#define FUNCTOR_syntax_error3 MK_FUNCTOR(101, 3)
#define FUNCTOR_tan1         MK_FUNCTOR(102, 1)
#define FUNCTOR_term_expansion2 MK_FUNCTOR(103, 2)
#define FUNCTOR_term_position5 MK_FUNCTOR(104, 5)
#define FUNCTOR_time2        MK_FUNCTOR(105, 2)
#define FUNCTOR_traceinterc3 MK_FUNCTOR(106, 3)
#define FUNCTOR_tracing1     MK_FUNCTOR(107, 1)
#define FUNCTOR_true0        MK_FUNCTOR(108, 0)
#define FUNCTOR_truncate1    MK_FUNCTOR(109, 1)
#define FUNCTOR_type_error2  MK_FUNCTOR(110, 2)
#define FUNCTOR_undefinterc4 MK_FUNCTOR(111, 4)
#define FUNCTOR_var1         MK_FUNCTOR(112, 1)
#define FUNCTOR_warning3     MK_FUNCTOR(113, 3)
#define FUNCTOR_xor2         MK_FUNCTOR(114, 2)
#define FUNCTOR_xpceref1     MK_FUNCTOR(115, 1)
#define FUNCTOR_xpceref2     MK_FUNCTOR(116, 2)
#define FUNCTOR_alias1       MK_FUNCTOR(117, 1)
#define FUNCTOR_io_error2    MK_FUNCTOR(118, 2)
#define FUNCTOR_not_implemented_error1 MK_FUNCTOR(119, 1)
#define FUNCTOR_resource_error1 MK_FUNCTOR(120, 1)
#define FUNCTOR_shell2       MK_FUNCTOR(121, 2)
#define FUNCTOR_signal1      MK_FUNCTOR(122, 1)
#define FUNCTOR_signal2      MK_FUNCTOR(123, 2)
#define FUNCTOR_callpred2    MK_FUNCTOR(124, 2)
