# Definition table of atoms functors used somewhere in the C-code.
# format:
#
#	A <name> <string>:	--> #define ATOM_<name> into <string>
#	F <name> <arity>	--> #define FUNCTOR_<name><arity>
#				(A name should exist as well)
#
# This file is processed using the Unix awk program defineatoms to produce
# pl-atom.ic, pl-atom.ih, pl-funct.ic and pl-funct.ih.  If you do not have
# awk you can propagate the changes by hand, but be careful!

A abort			"$abort"
A abs			"abs"
A acos			"acos"
A alias			"alias"
A alt			"$alt"
A alternative		"alternative"
A and			"/\\"
A append		"append"
A apply			"$apply"
A ar_equals		"=:="
A ar_not_equal		"=\\="
A argument		"argument"
A asin			"asin"
A at_equals		"=@="
A at_larger		"@>"
A at_larger_eq		"@>="
A at_not_equals		"\\=@="
A at_smaller		"@<"
A at_smaller_eq		"@=<"
A atan			"atan"
A atoms			"atoms"
A backslash		"\\"
A bar			"|"
A binary		"binary"
A block			"block"
A bool			"bool"
A brace_term_position	"brace_term_position"
A break			"break"
A call			"call"
A ceil			"ceil"
A ceiling		"ceiling"
A character_escapes	"character_escapes"
A clause		"clause"
A cm			"cm"
A codes			"codes"
A collected		"collected"
A collections		"collections"
A comma			","
A context_module	"context_module"
A continue		"continue"
A core_left		"core_left"
A cos			"cos"
A cputime		"cputime"
A curl			"{}"
A cut			"!"
A cut_parent		"cut_parent"
A cutted		"cut"
A dcut			"$cut"
A debug_on_error	"debug_on_error"
A default		"default"
A defined		"defined"
A dexit			"$exit"
A dforeign_registered    "$foreign_registered"
A dgarbage_collect	"$garbage_collect"
A discontiguous		"discontiguous"
A div			"//"
A divide		"/"
A dot			"."
A doublestar		"**"
A dynamic		"dynamic"
A e			"e"
A end_of_file		"end_of_file"
A eof_action		"eof_action"
A eof_code		"eof_code"
A equal			"equal"
A equals		"="
A error			"error"
A exception		"exception"
A execute		"execute"
A exist			"exist"
A exit			"exit"
A exp			"exp"
A exported		"exported"
A externals		"externals"
A fail			"fail"
A false			"false"
A file			"file"
A float			"float"
A float_format		"float_format"
A float_fractional_part	"float_fractional_part"
A float_integer_part	"float_integer_part"
A floor			"floor"
A foreign		"foreign"
A functors		"functors"
A fx			"fx"
A fy			"fy"
A gc			"gc"
A gctime		"gctime"
A global		"global"
A global_shifts		"global_shifts"
A globallimit		"globallimit"
A globalused		"globalused"
A goal			"goal"
A grammar		"-->"
A has_alternatives	"has_alternatives"
A hashed		"hashed"
A hat			"^"
A heapused		"heapused"
A hide_childs		"hide_childs"
A history_depth		"history_depth"
A ifthen		"->"
A ignore		"ignore"
A imported		"imported"
A indexed		"indexed"
A inferences		"inferences"
A init_file    		"init_file"
A initialization	"initialization"
A inserted_char		"inserted_char"
A integer		"integer"
A is			"is"
A larger		">"
A larger_equal		">="
A level			"level"
A limit			"limit"
A line_count		"line_count"
A list_position		"list_position"
A listing		"listing"
A local			"local"
A local_shifts		"local_shifts"
A locallimit		"locallimit"
A localused		"localused"
A lock			"lock"
A locked		"locked"
A log			"log"
A log10			"log10"
A lshift		"<<"
A mark			"mark"
A max			"max"
A message		"message"
A min			"min"
A min_free		"min_free"
A minus			"-"
A mismatched_char	"mismatched_char"
A mod			"mod"
A module		":"
A module_transparent	"module_transparent"
A modules		"modules"
A multifile		"multifile"
A nil			"[]"
A none			"none"
A not			"not"
A not_equals		"\\="
A not_provable		"\\+"
A not_strickt_equals	"\\=="
A not_unique		"not_unique"
A number		"number"
A obtain		"?"
A off     		"off"
A on			"on"
A optimise		"optimise"
A or			"\\/"
A parent		"parent"
A pi			"pi"
A pipe			"pipe"
A plus			"+"
A portray		"$portray"
A predicates		"predicates"
A print			"print"
A procedure		"procedure"
A prolog		"prolog"
A prompt		"|:"
A prove			":-"
A query			"?-"
A quiet			"quiet"
A random		"random"
A read			"read"
A readline		"readline"
A receiver		"receiver"
A redo			"redo"
A references		"references"
A rem			"rem"
A report_error		"report_error"
A reposition		"reposition"
A reset			"reset"
A retry			"retry"
A round			"round"
A rshift		">>"
A semicolon		";"
A separated		"separated"
A sign			"sign"
A sin			"sin"
A singleton		"singleton"
A singletons		"singletons"
A smaller		"<"
A smaller_equal		"=<"
A softcut		"*->"
A spy			"spy"
A sqrt			"sqrt"
A stand_alone		"stand_alone"
A star			"*"
A stderr		"stderr"
A stream_position	"$stream_position"
A strick_equal		"=="
A string		"string"
A string_position	"string_position"
A subterm_positions	"subterm_positions"
A suffix		"suffix"
A syntax_error		"syntax_error"
A syntax_errors		"syntax_errors"
A system		"system"
A system_init_file	"system_init_file"
A tan			"tan"
A term_expansion	"term_expansion"
A term_position		"term_position"
A text			"text"
A tilde			"~"
A time			"$time"
A top			"top"
A top_level    		"top_level"
A toplevel		"toplevel"
A trace			"trace"
A trace_any		"trace_any"
A trace_call		"trace_call"
A trace_exit		"trace_exit"
A trace_fail		"trace_fail"
A trace_gc		"trace_gc"
A trace_redo		"trace_redo"
A traceinterc		"prolog_trace_interception"
A trail			"trail"
A trail_shifts		"trail_shifts"
A traillimit		"traillimit"
A trailused		"trailused"
A transparent		"transparent"
A transposed_char	"transposed_char"
A transposed_word	"transposed_word"
A true			"true"
A truncate		"truncate"
A tty			"tty"
A tty_control		"tty_control"
A type			"type"
A undefinterc		"$undefined_procedure"
A unify			"unify"
A unique		"unique"
A univ			"=.."
A unlimited		"unlimited"
A update		"update"
A user			"user"
A user_error		"user_error"
A user_input		"user_input"
A user_output		"user_output"
A v			"v"
A var			"$VAR$"
A variable_names	"variable_names"
A very_deep		"very_deep"
A volatile		"volatile"
A warning		"warning"
A write			"write"
A xf			"xf"
A xfx			"xfx"
A xfy			"xfy"
A xor			"xor"
A xpceref		"@"
A yf			"yf"
A yfx			"yfx"
A yfy			"yfy"
A pc			"pc"
A hidden		"hidden"
A number_of_clauses	"number_of_clauses"
A fact			"fact"
A erased		"erased"
A debugging		"debugging"
A tracing		"tracing"
A cut_call		"cut_call"
A cut_exit		"cut_exit"

F abs			1
F acos			1
F alt			1
F and			2
F apply			2
F ar_equals		2
F ar_not_equal		2
F asin			1
F atan			1
F atan			2
F backslash		1
F bar			2
F block			3
F brace_term_position	3
F call			1
F ceil			1
F ceiling		1
F comma			2
F cos			1
F cputime		0
F curl			1
F dcut			1
F dexit			2
F dforeign_registered   2
F dgarbage_collect 	1
F div			2
F divide		2
F dot			2
F doublestar		2
F e			0
F equals		2
F exception		3
F exp			1
F fail			0
F float			1
F float_fractional_part	1
F float_integer_part	1
F floor			1
F hat			2
F ifthen		2
F integer		1
F is			2
F larger		2
F larger_equal		2
F list_position		4
F listing		1
F log			1
F log10			1
F lshift		2
F max			2
F min			2
F minus			1
F minus			2
F mod			2
F module		2
F not_provable		1
F obtain		2
F or			2
F pi			0
F pipe			1
F plus			2
F portray		1
F print			1
F procedure		2
F prove			1
F prove			2
F random		1
F rem			2
F round			1
F rshift		2
F semicolon		2
F sign			1
F sin			1
F singleton		3
F smaller		2
F smaller_equal		2
F softcut		2
F sqrt			1
F star			2
F stream_position	3
F string_position	2
F syntax_error		3
F tan			1
F term_expansion	2
F term_position		5
F time			2
F traceinterc		3
F true			0
F truncate		1
F undefinterc		4
F var			1
F warning		3
F xor			2
F xpceref		1
F retry			1
F erased		1
F debugging		1
F tracing		1
F spy			1
F break			3
F break			1
F cut_call		1
F cut_exit		1
