#!/bin/bash
#
# This script creates a source  deb  package   and  uploads  this to the
# Lauchpad PPA build service.
#
# Author: Yves Raimond and Jan Wielemaker

PL_VERSION=`cat VERSION`
GIT_SHORT_HASH=`git describe | sed 's/[^-]*-//'`
VERSION=$PL_VERSION-$GIT_SHORT_HASH-ubuntu1
TARGET_DISTRO=precise
build=true
push=false
pgpkey=E6CB0ADE
program="$0"

usage()
{ cat << EOM
Usage: $(basename $program) [option ...]
Options:
    --distro=Distro [default: $TARGET_DISTRO]
      Set the target distribution
    --no-build
      Only create the ppa directory, do not build a source deb
    --push
      Push the result to launchpad using dput(1)
    --key=Key [default: $pgpkey]
      Set the PGP key for signing the package
EOM
exit 1
}

done=false
while [ $done = false ]; do
    case "$1" in
	--help)
		usage
		exit 0
		;;
	--distro=*)
		TARGET_DISTRO="`echo $1 | sed 's/--[^=]*=//'`"
		shift
		;;
	--key=*)
		pgpkey="`echo $1 | sed 's/--[^=]*=//'`"
		shift
		;;
	--no-build)
		build=false
		shift
		;;
	--push)
		push=true
		shift
		;;
	*)	if [ x"$*" != x"" ]; then
		  usage
		  exit 1
		else
		  done=true
		fi
		;;
    esac
done


echo "Building package $VERSION for $TARGET_DISTRO"

echo " - Adding entry to changelog"

dch --distribution=$TARGET_DISTRO -v $VERSION "New upstream release (from GIT)"

buildbase=swi-prolog-$PL_VERSION-$GIT_SHORT_HASH
builddir=build-ppa-tmp/$buildbase
rm -rf build-ppa-tmp/*
mkdir -p $builddir

echo " - Copying files into $builddir"

rsync -Ca --exclude=build-ppa-tmp --filter=':- .gitignore' ./ $builddir

echo " - Building source tarball"

( cd build-ppa-tmp && tar czf $buildbase.orig.tar.gz $buildbase )

if [ $build = true ]; then
  echo " - Building source package"

  ( cd $builddir && debuild -S -sa -k$pgpkey )
else
  echo " - Created $builddir; skipped building of source deb"
  exit 0
fi

if [ $push = true ]; then
  echo " - Pushing source package to PPA"

  dput ppa:swi-prolog/devel swi-prolog_${VERSION}_source.changes
else
  echo " - Skipped pushing to PPA"
fi
